# yaml-language-server: $schema=../suews-var-def.json
# use the above definition to enable schema validation in VSCode

# NB: This file is manually curated by the SUEWS development team and is used in the following places:
# - SUEWS documentation: https://suews.readthedocs.io/en/latest/variables.html
# - SUEWS variable json schema file to enable schema validation (via `convert_var_info_to_json_schema.py` in this repo)
# any questions, please contact the SUEWS development team by submitting an issue:
# https://github.com/UMEP-dev/SUEWS/issues/new

# #########################################################################
# this file is used to define:
#  variables used in snow calculations
# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# revision history:
# TS 08 Mar 2023: checked
# #########################################################################

- name: crwmax
  use:
    input: parameter
  description: Maximum water holding capacity of snow
  dimensions: 0
  unit: mm
  suews table headers: :option:`CRWMax <CRWMax>`
  requisite:
    snowuse: "1: SnowCalc"

- name: crwmin
  use:
    input: parameter
  description: Minimum water holding capacity of snow
  dimensions: 0
  unit: mm
  suews table headers: :option:`CRWMin <CRWMin>`
  requisite:
    snowuse: "1: SnowCalc"

- name: narp_emis_snow
  use:
    input: parameter
  description: Effective surface emissivity.
  dimensions: 0
  unit: Effective surface emissivity
  suews table headers: :option:`Emissivity <Emissivity>`
  requisite:
    NetRadiationMethod: "<500: NARP"

- name: preciplimit
  use:
    input: parameter
  description: Temperature limit when precipitation falls as snow
  dimensions: 0
  unit: degC
  suews table headers: :option:`PrecipLimSnow <PrecipLimSnow>`
  requisite:
    SnowUse: 1:SnowCalc

- name: preciplimitalb
  use:
    input: parameter
  description:
    Limit for hourly precipitation when the ground is fully covered with snow and the snow albedo is reset to AlbedoMax as.
  dimensions: 0
  unit: mm
  suews table headers: :option:`PrecipLimAlb <PrecipLimAlb>`
  requisite:
    SnowUse: 1:SnowCalc

- name: snowalb
  use:
    input: state
  description: Initial snow albedo
  dimensions: 0
  unit: Initial snow albed
  suews table headers: :option:`SnowAlb0 <SnowAlb0>`
  requisite:
    SnowUse: "1: SnowCalc"

- name: snowalbmax
  use:
    input: parameter
  description: Effective surface albedo (middle of the day value) for summertime.
  dimensions: 0
  unit:  "-"
  suews table headers: :option:`AlbedoMax <AlbedoMax>`
  requisite:
    SnowUse: "1: SnowCalc"

- name: snowalbmin
  use:
    input: parameter
  description:
    Effective surface albedo (middle of the day value) for wintertime (not including snow).
  dimensions: 0
  unit: "-"
  suews table headers: :option:`AlbedoMin <AlbedoMin>`
  requisite:
    SnowUse: "1: SnowCalc"

- name: snowdens
  use:
    input: state
  description: Initial snow density of each land cover.
  dimensions:
    7: "SUEWS land covers: { `Paved`, `Bldgs`, `EveTr`, `DecTr`, `Grass`,`BSoil`, `Water`}"
  unit: Initial snow density of each land cover
  suews table headers:
    :option:`SnowDensBldgs <SnowDensBldgs>`, :option:`SnowDensPaved
    <SnowDensPaved>`, :option:`SnowDensDecTr <SnowDensDecTr>`, :option:`SnowDensEveTr
    <SnowDensEveTr>`, :option:`SnowDensGrass <SnowDensGrass>`, :option:`SnowDensBSoil
    <SnowDensBSoil>`, :option:`SnowDensWater <SnowDensWater>`
  requisite:
    SnowUse: "1: SnowCalc"

- name: snowdensmax
  use:
    input: parameter
  description: Maximum snow density
  dimensions: 0
  unit: kg m^-3
  suews table headers: :option:`SnowDensMax <SnowDensMax>`
  requisite:
    SnowUse: "1: SnowCalc"

- name: snowdensmin
  use:
    input: parameter
  description: Fresh snow density
  dimensions: 0
  unit: kg m^-3
  suews table headers: :option:`SnowDensMin <SnowDensMin>`
  requisite:
    SnowUse: "1: SnowCalc"

- name: snowfrac
  use:
    input: state
  description: Initial plan area fraction of snow on each land cover`
  dimensions:
    7: "SUEWS land covers: { `Paved`, `Bldgs`, `EveTr`, `DecTr`, `Grass`,`BSoil`, `Water`}"
  unit: Initial plan area fraction of snow on each land cover
  suews table headers:
    :option:`SnowFracBldgs <SnowFracBldgs>`, :option:`SnowFracPaved
    <SnowFracPaved>`, :option:`SnowFracDecTr <SnowFracDecTr>`, :option:`SnowFracEveTr
    <SnowFracEveTr>`, :option:`SnowFracGrass <SnowFracGrass>`, :option:`SnowFracBSoil
    <SnowFracBSoil>`, :option:`SnowFracWater <SnowFracWater>`
  requisite:
    SnowUse: "1: SnowCalc"

- name: snowlimbldg
  use:
    input: parameter
  description:
    Limit of the snow water equivalent for snow removal from roads and roofs
  dimensions: 0
  unit: mm
  suews table headers: :option:`SnowLimRemove <SnowLimRemove>`
  requisite:
    SnowUse: "1: SnowCalc"

- name: snowlimpaved
  use:
    input: parameter
  description:
    Limit of the snow water equivalent for snow removal from roads and roofs
  dimensions: 0
  unit: mm
  suews table headers: :option:`SnowLimRemove <SnowLimRemove>`
  requisite:
    SnowUse: "1: SnowCalc"

- name: snowpack
  use:
    input: state
  description: Initial snow water equivalent on each land cover
  dimensions:
    7: "SUEWS land covers: { `Paved`, `Bldgs`, `EveTr`, `DecTr`, `Grass`,`BSoil`, `Water`}"
  unit: Initial snow water equivalent on each land cove
  suews table headers:
    :option:`SnowPackBldgs <SnowPackBldgs>`, :option:`SnowPackPaved
    <SnowPackPaved>`, :option:`SnowPackDecTr <SnowPackDecTr>`, :option:`SnowPackEveTr
    <SnowPackEveTr>`, :option:`SnowPackGrass <SnowPackGrass>`, :option:`SnowPackBSoil
    <SnowPackBSoil>`, :option:`SnowPackWater <SnowPackWater>`
  requisite:
    SnowUse: "1: SnowCalc"

- name: snowpacklimit
  use:
    input: parameter
  description: Limit for the snow water equivalent when snow cover starts to be patchy
  dimensions:
    7: "SUEWS land covers: { `Paved`, `Bldgs`, `EveTr`, `DecTr`, `Grass`,`BSoil`, `Water`}"
  unit: mm
  suews table headers: :option:`SnowLimPatch <SnowLimPatch>`
  requisite:
    SnowUse: "1: SnowCalc"

- name: snowprof_24hr
  use:
    input: parameter
  description: Hourly profile values used in snow clearing.
  dimensions:
    24: "24 hours of a day"
    2: "{Weekday, Weekend}"
  unit: Hourly profile values used in snow clearing
  suews table headers:
    :option:`SnowClearingProfWD <SnowClearingProfWD>`, :option:`SnowClearingProfWE
    <SnowClearingProfWE>`
  requisite:
    SnowUse: "1: SnowCalc"

- name: tau_a
  use:
    input: parameter
  description: Time constant for snow albedo aging in cold snow
  dimensions: 0
  unit: "-"
  suews table headers: :option:`tau_a <tau_a>`
  requisite:
    SnowUse: "1: SnowCalc"

- name: tau_f
  use:
    input: parameter
  description: Time constant for snow albedo aging in melting snow
  dimensions: 0
  unit: "-"
  suews table headers: :option:`tau_f <tau_f>`
  requisite:
    SnowUse: "1: SnowCalc"

- name: tau_r
  use:
    input: parameter
  description: Time constant for snow density ageing
  dimensions: 0
  unit: "-"
  suews table headers: :option:`tau_r <tau_r>`
  requisite:
    SnowUse: "1: SnowCalc"

- name: tempmeltfact
  use:
    input: parameter
  description: Hourly temperature melt factor of snow
  dimensions: 0
  unit: mm K^-1 h^-1
  suews table headers: :option:`TempMeltFactor <TempMeltFactor>`
  requisite:
    SnowUse: "1: SnowCalc"

- name: radmeltfact
  use:
    input: parameter
  description: Hourly radiation melt factor of snow
  dimensions: 0
  unit: mm W^-1 h^-1
  suews table headers: :option:`RadMeltFactor <RadMeltFactor>`
  requisite:
    SnowUse: "1: SnowCalc"

- name: snowwater
  use:
    input: state
  description: Initial amount of liquid water in the snow on each land cover
  dimensions:
    7: "SUEWS land covers: { `Paved`, `Bldgs`, `EveTr`, `DecTr`, `Grass`,`BSoil`, `Water`}"
  unit: Initial amount of liquid water in the snow on each land cove
  suews table headers:
    :option:`SnowWaterBldgsState <SnowWaterBldgsState>`,
    :option:`SnowWaterPavedState <SnowWaterPavedState>`, :option:`SnowWaterDecTrState
    <SnowWaterDecTrState>`, :option:`SnowWaterEveTrState <SnowWaterEveTrState>`,
    :option:`SnowWaterGrassState <SnowWaterGrassState>`, :option:`SnowWaterBSoilState
    <SnowWaterBSoilState>`, :option:`SnowWaterWaterState <SnowWaterWaterState>`
  requisite:
    SnowUse: "1: SnowCalc"
