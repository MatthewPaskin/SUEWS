{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "array",
  "minItems": 1,
  "items": {
    "$ref": "#/definitions/var"
  },
  "required": [
    "items"
  ],
  "definitions": {
    "physics_scheme_pattern": {
      "type": "string",
      "pattern": "^[_A-Za-z]+\\.[0-9]+[-A-Za-z0-9]+$"
    },
    "output_group": {
      "type": "string",
      "enum": [
        "SUEWS",
        "SPARTACUS",
        "snow",
        "RSL",
        "DailyState",
        "debug",
        "BEERS"
      ]
    },
    "input_def": {
      "type": "object",
      "properties": {
        "input": {
          "type": "string",
          "description": "intention of the input, one of the following: \n - `state`: model state, updated during simulation\n- `parameter`:site property, invariant during simulation\n- `forcing`: meteorological forcing, loaded from external files specified in `model.control`\n - `control`: model configuration, invariant during simulation\n - `physics`: physcics configuration, invariant during simulation",
          "enum": [
            "state",
            "parameter",
            "forcing",
            "control",
            "physics"
          ]
        }
      },
      "required": [
        "input"
      ],
      "additionalProperties": false
    },
    "output_def": {
      "properties": {
        "output": {
          "description": "destination the variable will be written out; can be multiple text files ",
          "oneOf": [
            {
              "type": "string",
              "$ref": "#/definitions/output_group"
            },
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/output_group"
              },
              "minItems": 1,
              "uniqueItems": true
            }
          ]
        }
      },
      "required": [
        "output"
      ],
      "additionalProperties": false
    },
    "var": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the variable, e.g. 'qh' "
        },
        "use": {
          "type": "object",
          "description": "Use of the variable, either 'input' or 'output' ",
          "oneOf": [
            {
              "$ref": "#/definitions/input_def"
            },
            {
              "$ref": "#/definitions/output_def"
            }
          ]
        },
        "description": {
          "type": "string",
          "minimum": 1,
          "description": "one-line description of the variable; so keep this concise."
        },
        "unit": {
          "type": "string",
          "description": "unit of the variable; e.g. 'W m-2'. This will be used to check the consistency of the input data and wrapped by latex notations in the documentation."
        },
        "dimensions":{
          "description": "dimensions of the variable as well as related explanations, e.g. {2: ['weekday','weekend'], 3: 'height', ...}; or integer `0` for scalar variables. This will be used to check the consistency of the input data",
          "oneOf": [
            {
              "type": "object",
              "items": {
                "type": "string"
              },
              "minItems": 1,
              "uniqueItems": true
            },
            {
              "type": "integer"

            }
          ]
        },
        "remarks": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "uniqueItems": false,
          "description": "remarks on the variable, e.g. 'only used in the first 10 days of the simulation'.\n each item will be interpreted by Sphinx to construct documentation entries; a blank item will be interpreted as a line break."
        },
        "requisite": {
          "description": "detailed use of the variable: it should be one of the following:\n - `configuration`: this is used in model configuration\n - `physics_scheme.option`: the physics scheme and option identifier separated by a dot (`.`); e.g. `netradiation.3`",
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "configuration",
                "site description",
                "forcing"
              ]
            },
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/physics_scheme_pattern"
              },
              "minItems": 1,
              "uniqueItems": true
            },
            {
              "$ref": "#/definitions/physics_scheme_pattern"
            }
          ]
        }
      },
      "required": [
        "name",
        "use",
        "description",
        "unit"
      ],
      "if": {
        "properties": {
          "use": {
            "properties": {
              "input": {
              }
            },
            "required": [
              "input"
            ]
          }
        }
      },
      "then": {
        "required": [
          "requisite","dimensions"
        ]
      },
      "additionalProperties": {
      }
    }
  },
  "allOf": [
    {
      "if": {
        "properties": {
          "use": {
            "const": "someValue"
          }
        }
      },
      "then": {
        "required": [
          "property2"
        ]
      }
    },
    {
      "if": {
        "properties": {
          "property2": {
            "const": "otherValue"
          }
        }
      },
      "then": {
        "required": [
          "property3"
        ]
      }
    }
  ]
}